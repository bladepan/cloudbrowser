// Generated by CoffeeScript 1.6.3
(function() {
  var app;

  app = angular.module("Chat3", []);

  app.controller("ChatCtrl", function($scope) {
    var chatManager, currentBrowser, newMessageHandler;
    $scope.safeApply = function(fn) {
      var phase;
      phase = this.$root.$$phase;
      if (phase === '$apply' || phase === '$digest') {
        if (fn) {
          return fn();
        }
      } else {
        return this.$apply(fn);
      }
    };
    $scope.roomName = null;
    $scope.selectedRoom = null;
    $scope.showCreateForm = false;
    $scope.showJoinForm = false;
    $scope.currentMessage = "";
    newMessageHandler = function() {
      return $scope.$apply();
    };
    currentBrowser = cloudbrowser.currentBrowser;
    chatManager = cloudbrowser.currentAppInstanceConfig.getObj();
    $scope.user = chatManager.addUser(currentBrowser.getCreator(), newMessageHandler);
    $scope.toggleForm = function(type) {
      var formName;
      formName = "show" + type + "Form";
      return $scope[formName] = !$scope[formName];
    };
    $scope.openForm = function(type) {
      var formName;
      formName = "show" + type + "Form";
      return $scope[formName] = true;
    };
    $scope.closeForm = function(type) {
      var formName;
      formName = "show" + type + "Form";
      return $scope[formName] = false;
    };
    $scope.createRoom = function() {
      var err, room, _ref;
      _ref = chatManager.createRoom($scope.roomName), err = _ref[0], room = _ref[1];
      if (err) {
        $scope.error = err.message;
      } else {
        chatManager.addUserToRoom($scope.user, room);
      }
      $scope.roomName = null;
      return $scope.closeForm('Create');
    };
    $scope.joinRoom = function() {
      chatManager.addUserToRoom($scope.user, $scope.selectedRoom);
      $scope.selectedRoom = null;
      return $scope.closeForm('Join');
    };
    $scope.leaveRoom = function(room) {
      return chatManager.removeUserFromRoom($scope.user, room);
    };
    $scope.postMessage = function() {
      if ($scope.user.currentRoom) {
        $scope.user.currentRoom.postMessage($scope.user, $scope.currentMessage);
        return $scope.currentMessage = "";
      }
    };
    return chatManager.on("newRoom", function(room) {
      console.log("event new room");
      return $scope.safeApply(function() {
        return $scope.user.addToOtherRooms(room);
      });
    });
  });

  app.directive('enterSubmit', function() {
    var directive;
    return directive = {
      restrict: 'A',
      link: function(scope, element, attrs) {
        var submit;
        submit = false;
        return $(element).on({
          keydown: function(e) {
            submit = false;
            if (e.which === 13 && !e.shiftKey) {
              submit = true;
              return e.preventDefault();
            }
          },
          keyup: function() {
            if (submit) {
              scope.$eval(attrs.enterSubmit);
              return scope.$digest();
            }
          }
        });
      }
    };
  });

}).call(this);
